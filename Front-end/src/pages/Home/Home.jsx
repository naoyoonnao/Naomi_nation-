import React, { useEffect, useState } from 'react';
import ShowsTeaserSlider from "../../components/ShowsTeaserSlider/ShowsTeaserSlider";
import './Home.scss';
import Header from '../../components/Header/Header';
import MainSection from '../../components/MainSection/MainSection';
import CategorySlider from '../../components/CategorySlider/CategorySlider';
import axios from 'axios';

const API = 'http://localhost:8080';

// 1. –î–ª—è –Ω–∞–¥—ñ–π–Ω–æ—Å—Ç—ñ, –∫–ª—é—á—ñ —Ç–µ–ø–µ—Ä –∑ –º–∞–ª–µ–Ω—å–∫–æ—ó –ª—ñ—Ç–µ—Ä–∏.
const categoryLinks = {
  "–∫–æ—à–µ–Ω—è—Ç–∞": "/kittens",
  "–¥–æ—Ä–æ—Å–ª—ñ": "/breeding",
};

export default function Home() {
  const [catsByCat, setCatsByCat] = useState({});
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    axios
      .get(`${API}/api/cats`)
      .then(res => {
        const map = {};
        res.data.forEach(c => {
          map[c.category] = (map[c.category] || []).concat(c);
        });
        setCatsByCat(map);
        setLoading(false);
      })
      .catch(err => {
        console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ—Ç—ñ–≤:', err);
        setError('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∫–æ—Ç—ñ–≤');
        setLoading(false);
      });
  }, []);

  return (
    <>
      <section>
        <div className="wrapper">
          <Header />
          <MainSection />
        </div>
      </section>

      <div>
        <div className="wrapper">
          {loading && <p className="state-note">Loading...</p>}
          {error && <p className="state-note error">{error}</p>}

          {Object.entries(catsByCat).map(([catName, list]) => {
            // 2. –ì–û–õ–û–í–ù–ï –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø:
            //    –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ –Ω–∞–∑–≤—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –≤ –º–∞–ª–µ–Ω—å–∫—ñ –ª—ñ—Ç–µ—Ä–∏ –ø–µ—Ä–µ–¥ –ø–æ—à—É–∫–æ–º.
            //    –¢–µ–ø–µ—Ä "–î–æ—Ä–æ—Å–ª—ñ", "–¥–æ—Ä–æ—Å–ª—ñ" –∞–±–æ " –î–û–†–û–°–õ–Ü " –±—É–¥—É—Ç—å –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –æ–¥–Ω–∞–∫–æ–≤–æ.
            const link = categoryLinks[catName.toLowerCase().trim()];

            return (
              <CategorySlider
                key={catName}
                title={catName}
                cats={list}
                seeAllLink={link} // –ü–µ—Ä–µ–¥–∞—î–º–æ –∑–Ω–∞–π–¥–µ–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è
              />
            );
          })}

          {!loading && !Object.keys(catsByCat).length && (
            <p className="state-note">–ü–æ–∫–∏ —â–æ –Ω–µ–º–∞—î –ø–æ—Å—Ç—ñ–≤ üôÉ</p>
          )}
        </div>
      </div>
      
      <ShowsTeaserSlider />
    </>
  );
}
